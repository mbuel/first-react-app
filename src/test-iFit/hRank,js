function sockMerchant(n, ar, numberMatches=0) {
    let bsTree = ar;

    let searchInt = bsTree[bsTree.length - 1];
    bsTree.splice(bsTree.length - 1, 1);
        
    let foundIndex = bsTree.indexOf(searchInt);
    if (foundIndex != -1) {
        numberMatches++;
        bsTree.splice((foundIndex), 1);
    }
    console.log(bsTree);
    if(bsTree.length > 1) {
        numberMatches = sockMerchant(bsTree, ar, numberMatches);
    }
    return numberMatches;

}

function commonSubstring(a, b, bsChar1=[], bsChar2=[], match = "NO") {
    if ((a && b) && (bsChar1.length == 0 && bsChar2.length == 0)) {
        bsChar1 = a.pop().split("");
        bsChar2 = b.pop().split("");
    }

    let searchChar = bsChar1.pop();

    
        
    let foundIndex = bsChar1.indexOf(searchChar);
    if (foundIndex != -1) {
        return "YES";
    }
    if(match !== "YES" || (bsChar1.length > 1 && bsChar2.length > 1)) {
        match = commonSubstring(a, b, bsChar1, bsChar2, match);
    }
    return "NO";

}

function nearlySimilarRectangles(sides) {
    let bsTree = sides;
    let similarTriangles = 0;
    bsTree = bsTree.pop();
    for(let i = 0; i < sides.length; i++) {
        if(sides[i][0] / bsTree[0] == sides[i][1] / bsTree[1]) {
            similarTriangles++;
            continue;
        }
    }
    similarTriangles = similarTriangles > 0 ? similarTriangles++ : similarTriangles;
    return similarTriangles;

}

let nums = 10;
let ints = [10, 20, 20, 10, 10, 5, 50, 10, 20, 20, 20, 9, 10, 4, 50, 10, 20, 20, 20, 10, 10, 30, 50, 10, 20, 35, 20, 20, 10, 10, 5, 50, 10, 20, 20, 20, 9, 10, 4, 50, 10, 20, 20, 20, 10, 10, 30, 50, 10, 20, 35];

let a = [ 'hello', 'hi' ]
let b = [ 'world', 'bye' ]

let triangles = [ [ 4, 8 ], [ 15, 30 ], [ 25, 50 ] ];

let triangles2 = [ [ 63118002897000, 49630774433192 ],
[ 469070000004345, 363279093172869 ],
[ 395901435355200, 192359529992865 ],
[ 102401822773359, 183027582908307 ],
[ 238458239517726, 48274939215690 ],
[ 432155547289491, 157511247915291 ],
[ 8891436738312, 111324046767126 ],
[ 17007516396325, 167334223484350 ],
[ 241338728930994, 219295192854402 ],
[ 705142491067872, 308690339529429 ],
[ 368802945104325, 48137827836189 ],
[ 715421053478598, 44981901614200 ],
[ 630343410832800, 304896048940896 ],
[ 70461237190920, 193320889294920 ],
[ 59571078769632, 47193008354592 ],
[ 591791685791362, 302825112863686 ],
[ 882768432475020, 700361246122758 ],
[ 391229756035440, 29326017196280 ],
[ 49634075925108, 621436821984159 ],
[ 123190446467638, 109681218726574 ],
[ 600144141841557, 105389215388968 ],
[ 295043470937368, 422992820731264 ],
[ 321982043297910, 388469462364792 ],
[ 327680345339500, 305355581972250 ],
[ 7655352552672, 17651498357988 ],
[ 228028811279850, 29086950778970 ],
[ 193312118260569, 217122005322453 ],
[ 659114404568315, 415240565679515 ],
[ 350739102568635, 382207972416030 ],
[ 153621989855400, 116359850320500 ],
[ 464387785674173, 83684817649484 ],
[ 228448771551198, 521846378796864 ],
[ 946908523801170, 717474279994808 ],
[ 212579551692000, 93060983872125 ],
[ 8886683880000, 3890325003750 ],
[ 9589125099400, 451324003542020 ],
[ 480379376811708, 605492882150520 ],
[ 10988281832076, 392844020760004 ],
[ 745595130452704, 520063141550398 ],
[ 493157778702890, 963746600999630 ],
[ 10337409580788, 774877284906 ],
[ 437692274575911, 125977585443786 ],
[ 246198469135049, 44366097969692 ],
[ 464910795596475, 53617389115950 ],
[ 155599905837780, 525419578483776 ],
[ 463225337444039, 100993847708523 ],
[ 653913378604035, 439764060603555 ],
[ 38891252747672, 89674365653613 ],
[ 62493296862023, 330468872873300 ],
[ 641140436155986, 91794870994788 ],
[ 87221481440068, 484013609240671 ],
[ 115668134322516, 33291865361016 ],
[ 272963728513082, 243030164025986 ],
[ 111058192795032, 775684930929804 ],
[ 927634220238117, 474678749607951 ],
[ 43831782865780, 34774784573562 ],
[ 214442633486688, 463270935691040 ],
[ 889999741254260, 706098343464954 ],
[ 244751204802927, 133033980258168 ],
[ 484938100137336, 399079752156336 ],
[ 472109489809204, 305594557263814 ],
[ 546161722253970, 175772386744938 ],
[ 96635333287190, 48748018270764 ],
[ 45861249248778, 95903502824106 ],
[ 594473250484310, 191320588455774 ],
[ 637891228791670, 15235631491745 ],
[ 342163776544400, 245492198506560 ],
[ 46213304842512, 126793078656912 ],
[ 309261742380220, 369785358589683 ],
[ 206784805083668, 272910541863195 ],
[ 212464852049506, 197989685585223 ],

[ 6257715647624, 35634873771201 ],

[ 278789069284470, 80241703673220 ],

[ 307458799707093, 193698339815733 ],

[ 784259417844192, 328631908909536 ],

[ 419337252535707, 456960857447646 ],

[ 94272554626850, 124461636815780 ],

[ 588375126836875, 11868127748750 ],

[ 45612849844184, 259744647738891 ],

[ 167326947247068, 581355102817818 ],

[ 70134295255980, 139030287534550 ],

[ 328603340891746, 306215694115143 ],

[ 18530511999780, 62572620154176 ],

[ 29285812109100, 622225527000 ],

[ 86558536722883, 573421813790970 ],

[ 330699847988804, 112640111626804 ],

[ 155079957249800, 20241737171656 ],

[ 98124696062964, 7355285429418 ],

[ 515517305446185, 431141407862900 ],

[ 421531403789155, 516010050243550 ],

[ 742118742983875, 363162076290485 ],

[ 627060537706456, 580305479017852 ],

[ 430564366865664, 127509094987920 ],

[ 53985989264172, 60635341197564 ],

[ 208855246604301, 73979342736377 ],

[ 90171655258068, 43120268136084 ],

[ 431165194499872, 180673177394976 ],

[ 302945935269582, 192345485263118 ],

[ 81489209998122, 253204090254930 ],

[ 869571995326044, 32426428139772 ]];

console.log("Number of matches: " + sockMerchant(nums, ints));

// console.log("Number of matches: " + commonSubstring(a, b));

console.log("Number of sides: " + nearlySimilarRectangles(triangles2));